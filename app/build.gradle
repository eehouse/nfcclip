def GITREV = "git describe --tags --dirty"
GITREV = GITREV.execute().text.trim()

apply plugin: 'com.android.application'

// AID must start with F (first 4 bits) and be from 5 to 16 bytes long
def NFC_AID_DBG = "FD8A591453B4"
def NFC_AID_REL = "FD32F43518A6"
def APP_NAME = "NFCCopyPaste"

// Unused for now. If I have to automate generation of qrcodes this will be the input for the foss variant.
def GITHUB_URL = "https://github.com/eehouse/nfcclip/releases/latest/download/app-foss-release-signed.apk"

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "org.eehouse.andy.clipvianfc"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "variant"
    productFlavors {
        foss {
            dimension "variant"
            buildConfigField "String", "VARIANT_NAME", "\"FOSS\""
            buildConfigField "boolean", "SHOW_INSTALL_QR", "true"

        }
        gp {
            dimension "variant"
            buildConfigField "String", "VARIANT_NAME", "\"PlayStore\""
            buildConfigField "boolean", "SHOW_INSTALL_QR", "false"
        }
    }

    signingConfigs {
        debug {
            def path = System.getenv("DEBUG_KEYSTORE_PATH")
            if (! path) {
                path = "./debug.keystore"
            }
            storeFile file(path)
            keyAlias "androiddebugkey"
            storePassword "android"
            keyPassword "android"
        }
    }

    buildTypes {
		all {
            resValue "string", "app_name", "\"${APP_NAME}\""
            buildConfigField "String", "GIT_REV", "\"$GITREV\""

            def stamp = Math.round(System.currentTimeMillis() / 1000)
            buildConfigField "long", "BUILD_STAMP_SECS", "$stamp"
		}
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "NFC_AID", "\"${NFC_AID_REL}\""
            resValue "string", "nfc_aid", "$NFC_AID_REL"
        }
        debug {
            resValue "string", "app_name", "\"${APP_NAME}.d\""
            applicationIdSuffix ".d"
            buildConfigField "String", "NFC_AID", "\"${NFC_AID_DBG}\""
            resValue "string", "nfc_aid", "$NFC_AID_DBG"
        }
    }
}

ext {
  supportLibVersion = '27.1.1'  // variable that can be referenced to keep support libs consistent
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.android.support:design:${supportLibVersion}"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

// This will show details about deprecated APIs etc.
tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}
